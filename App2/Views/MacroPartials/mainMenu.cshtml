@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web

@{
    var root = Model.Content.Site();
    var selection = root.Children.Where(x => x.IsVisible()).ToArray();
}

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav mr-auto">
            <li class="@((Model.Content.Name == root.Name)? "active": null) nav-item active">
                <a class="nav-link" href="@root.Url">@root.Name</a>

                @if (selection.Length > 0)
                {

                    foreach (var item in selection)
                    {
                        if (item.Children().Where(x => x.IsVisible()).Count() > 0)
                        { // Display the menu item with itschildren
                        <li class="@((item.Name == Model.Content.Name) ? "active" : null) nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="@item.Url" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @item.Name
                            </a>

                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                @foreach (var subMenuItem in item.Children().Where(x => x.IsVisible()))
                                {
                                    var isProtected = umbraco.library.IsProtected(subMenuItem.Id, subMenuItem.Path);
                                    var loginAccess = isProtected && umbraco.library.HasAccess(subMenuItem.Id, subMenuItem.Path);

                                    if (subMenuItem.DocumentTypeAlias == "projectItem")
                                    {
                                        if (umbraco.library.GetPreValueAsString(subMenuItem.GetPropertyValue<int>("projectStatus")) == "Completed")
                                        {
                                            if (!isProtected || loginAccess)
                                            {
                                                <a class="dropdown-item " href="@subMenuItem.Url">@subMenuItem.Name</a>
                                            }
                                        }

                                        else
                                        {
                                            if (!isProtected || loginAccess)
                                            {
                                                <a class="dropdown-item " href="@subMenuItem.Url">@subMenuItem.Name</a>

                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (!isProtected || loginAccess)
                                        {
                                            <a class="dropdown-item " href="@subMenuItem.Url">@subMenuItem.Name</a>
                                        }
                                    }

                                }

                            </div>
                        </li>
                    }

                    else
                    {

                        <li class="nav-item @(item.IsAncestorOrSelf(Model.Content) ? "active" : null)">
                            <a class="nav-link" href="@item.Url">@item.Name</a>
                        </li>

                    }
                }
            }

            </ul>
        </div>
    </nav>




    @*@inherits Umbraco.Web.Macros.PartialViewMacroPage
        @using Umbraco.Web


        @*
            This snippet displays a list of links of the pages immediately under the top-most page in the content tree.
            This is the home page for a standard website.
            It also highlights the current active page/section in the navigation with the CSS class "current".




        @{ var root = Model.Content.Site();
            var selection = root.Children.Where(x => x.IsVisible()).ToArray(); }


        <nav class = "nav navbar-expand-lg navbar-light bg-light">
            <ul class="nav navbar-nav">
                <li class="@((Model.Content.Name== root.Name) ? "active" : null) nav-item active">
                    <a class="nav-link" href="/" >@root.Name</a>
                </li>
                @if (selection.Length > 0)
                {
                    foreach (var item in selection)
                    {
                        if (item.Children().Where(x => x.IsVisible()).Count() > 0)
                        {
                            <li class="@((item.Name == Model.Content.Name) ? "active" : null) nav-item dropdown">
                                <a class="nav-link dropdown-toggle" id="navbarDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" href="@item.Url">@item.Name</a>

                                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                    @foreach (var subMenuItem in item.Children().Where(x => x.IsVisible()))
                                    {
                                        if (subMenuItem.DocumentTypeAlias == "projectItem")
                                        {
                                            if (umbraco.library.GetPreValueAsString(subMenuItem.GetPropertyValue<int>("projectStatus")) == "Completed")
                                            {
                                                <a class="dropdown-item" href="@subMenuItem.Url">@subMenuItem.Name</a>
                                            }
                                        }
                                        else
                                        {
                                            <a class="dropdown-item" href="@subMenuItem.Url">@subMenuItem.Name</a>
                                        }
                                    }

                                </div>
                            </li>

                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="@item.Url">@item.Name</a>
                            </li>
                        }
                    }
                }
             </ul>
        </nav>*@
